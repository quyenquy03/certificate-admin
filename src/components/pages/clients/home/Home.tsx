"use client";

import { FC } from "react";
import { motion } from "framer-motion";
import {
  FiSearch,
  FiUserPlus,
  FiShield,
  FiCheckCircle,
  FiClock,
  FiLock,
  FiGrid,
  FiFileText,
  FiMail,
  FiPhone,
  FiMessageCircle,
} from "react-icons/fi";
import { Button } from "@/components/buttons";
import { Badge } from "@/components/badges";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
} from "@/components/cards";
import { Separator } from "@/components/separators";
import { Header as LandingHeader } from "@/components/headers/landing";

const steps = [
  {
    marker: "1Ô∏è‚É£",
    title: "Thu th·∫≠p d·ªØ li·ªáu g·ªëc",
    description:
      "Nh√† tr∆∞·ªùng ho·∫∑c trung t√¢m ƒë√†o t·∫°o g·ª≠i h·ªì s∆° vƒÉn b·∫±ng qua API b·∫£o m·∫≠t ho·∫∑c c·ªïng qu·∫£n tr·ªã, ƒë·∫£m b·∫£o t√≠nh ch√≠nh x√°c tuy·ªát ƒë·ªëi c·ªßa th√¥ng tin ban ƒë·∫ßu.",
  },
  {
    marker: "2Ô∏è‚É£",
    title: "M√£ h√≥a v√† ghi l√™n blockchain",
    description:
      "D·ªØ li·ªáu ƒë∆∞·ª£c m√£ bƒÉm, k√Ω s·ªë v√† l∆∞u tr·ªØ tr√™n blockchain ‚Äî b·∫•t bi·∫øn, kh√¥ng th·ªÉ ch·ªânh s·ª≠a, t·∫°o d·∫•u v√¢n tay k·ªπ thu·∫≠t s·ªë duy nh·∫•t cho m·ªói ch·ª©ng ch·ªâ.",
  },
  {
    marker: "3Ô∏è‚É£",
    title: "X√°c th·ª±c t·ª©c th·ªùi",
    description:
      "Doanh nghi·ªáp ho·∫∑c c√° nh√¢n qu√©t m√£ QR ho·∫∑c truy c·∫≠p li√™n k·∫øt ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i ch·ª©ng ch·ªâ, k·∫øt qu·∫£ ƒë∆∞·ª£c tr·∫£ v·ªÅ ngay trong v√†i gi√¢y.",
  },
];

const benefits = [
  {
    icon: FiShield,
    title: "üõ°Ô∏è Ch·ªëng gi·∫£ m·∫°o tuy·ªát ƒë·ªëi",
    description:
      "M·ªói ch·ª©ng ch·ªâ g·∫Øn ch·ªØ k√Ω s·ªë v√† m√£ bƒÉm ri√™ng bi·ªát, kh√¥ng th·ªÉ ch·ªânh s·ª≠a hay sao ch√©p, b·∫£o v·ªá gi√° tr·ªã th·∫≠t c·ªßa vƒÉn b·∫±ng.",
  },
  {
    icon: FiCheckCircle,
    title: "‚è±Ô∏è Minh b·∫°ch theo th·ªùi gian th·ª±c",
    description:
      "H·ªá th·ªëng x√°c th·ª±c v·∫≠n h√†nh 24/7, tr·∫£ k·∫øt qu·∫£ t·ª©c th√¨ v√† l∆∞u v·∫øt to√†n b·ªô l·ªãch s·ª≠ truy c·∫≠p ƒë·ªÉ d·ªÖ d√†ng ki·ªÉm so√°t.",
  },
  {
    icon: FiClock,
    title: "‚ö° Ti·∫øt ki·ªám th·ªùi gian v√† chi ph√≠",
    description:
      "T·ª± ƒë·ªông h√≥a kh√¢u ki·ªÉm tra, gi·∫£m thao t√°c th·ªß c√¥ng v√† r√∫t ng·∫Øn qu√° tr√¨nh x√°c minh t·ª´ h√†ng ng√†y xu·ªëng ch·ªâ c√≤n v√†i gi√¢y.",
  },
  {
    icon: FiLock,
    title: "üîí B·∫£o m·∫≠t d·ªØ li·ªáu h·ªçc vi√™n",
    description:
      "D·ªØ li·ªáu c√° nh√¢n v√† th√†nh t√≠ch h·ªçc t·∫≠p ƒë∆∞·ª£c m√£ h√≥a, ph√¢n quy·ªÅn truy c·∫≠p r√µ r√†ng, tu√¢n th·ªß c√°c ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø.",
  },
];

const lookupFeatures = [
  {
    icon: FiSearch,
    title: "Tra c·ª©u theo m√£ ch·ª©ng ch·ªâ",
    description:
      "Nh·∫≠p m√£ ƒë·ªãnh danh duy nh·∫•t ƒë·ªÉ xem th√¥ng tin vƒÉn b·∫±ng, tr·∫°ng th√°i hi·ªáu l·ª±c v√† ngu·ªìn ph√°t h√†nh.",
  },
  {
    icon: FiGrid,
    title: "Qu√©t QR th√¥ng minh",
    description:
      "S·ª≠ d·ª•ng ƒëi·ªán tho·∫°i ho·∫∑c m√°y qu√©t ƒë·ªÉ ƒë·ªçc m√£ QR tr√™n vƒÉn b·∫±ng, x√°c th·ª±c ch·ªâ v·ªõi m·ªôt l·∫ßn ch·∫°m.",
  },
  {
    icon: FiFileText,
    title: "B√°o c√°o chi ti·∫øt",
    description:
      "Theo d√µi l·ªãch s·ª≠ c·∫≠p nh·∫≠t, ƒë∆°n v·ªã li√™n quan v√† c√°c l·∫ßn x√°c th·ª±c tr∆∞·ªõc ƒë√≥ trong m·ªôt b·∫£ng ƒëi·ªÅu khi·ªÉn duy nh·∫•t.",
  },
];

const contactDetails = [
  {
    icon: FiMail,
    label: "Email",
    value: "support@certifychain.io",
  },
  {
    icon: FiPhone,
    label: "Hotline",
    value: "+84 24 7300 1234",
  },
  {
    icon: FiMessageCircle,
    label: "Chat tr·ª±c tuy·∫øn",
    value: "H·ªó tr·ª£ 24/7 d√†nh cho tr∆∞·ªùng h·ªçc v√† doanh nghi·ªáp.",
  },
];

const partners = [
  "EduChain Labs",
  "VeriTrust AI",
  "Global Accreditor",
  "SecureHire",
  "ChainProof Alliance",
];

export const Home: FC = () => {
  const scrollToSection = (id: string) => {
    const el = document.getElementById(id);
    if (el) {
      el.scrollIntoView({ behavior: "smooth", block: "start" });
    }
  };

  return (
    <div className="min-h-screen bg-slate-950 text-slate-100">
      <LandingHeader />
      <main className="pt-0">
        <section
          id="gioi-thieu"
          className="relative overflow-hidden scroll-mt-[80px] text-center"
        >
          <div className="absolute inset-0 bg-gradient-to-br from-indigo-500/20 via-slate-900 to-slate-950" />
          <div className="absolute top-1/2 left-1/2 h-[26rem] w-[26rem] -translate-x-1/2 -translate-y-1/2 rounded-full bg-indigo-500/30 blur-3xl" />
          <div className="relative mx-auto flex max-w-6xl flex-col items-center gap-10 px-6 pb-24 pt-32 sm:px-8 md:pt-36">
            <motion.h1
              initial={{ opacity: 0, y: 12 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, ease: "easeOut" }}
              className="text-5xl font-semibold leading-tight tracking-tight sm:text-6xl md:text-7xl"
            >
              CertifyChain
            </motion.h1>
            <motion.h2
              initial={{ opacity: 0, y: 16 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, ease: "easeOut", delay: 0.05 }}
              className="text-2xl font-medium text-indigo-200 sm:text-3xl md:text-4xl"
            >
              N·ªÅn t·∫£ng x√°c th·ª±c ch·ª©ng ch·ªâ, vƒÉn b·∫±ng qua Blockchain
            </motion.h2>
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, ease: "easeOut", delay: 0.15 }}
              className="max-w-3xl text-lg text-slate-300 sm:text-xl"
            >
              Gi·∫£i ph√°p gi√∫p nh√† tr∆∞·ªùng, doanh nghi·ªáp v√† h·ªçc vi√™n x√°c th·ª±c vƒÉn b·∫±ng ch·ªâ trong v√†i gi√¢y. M·ªói ch·ª©ng ch·ªâ
              ƒë∆∞·ª£c m√£ h√≥a, l∆∞u tr·ªØ phi t·∫≠p trung v√† c√≥ th·ªÉ ki·ªÉm ch·ª©ng ·ªü m·ªçi n∆°i, m·ªçi l√∫c ‚Äî ƒë·∫£m b·∫£o minh b·∫°ch, an to√†n v√†
              kh√¥ng th·ªÉ l√†m gi·∫£.
            </motion.p>
            <motion.div
              initial={{ opacity: 0, y: 24 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, ease: "easeOut", delay: 0.25 }}
              className="flex flex-wrap items-center justify-center gap-4"
            >
              <Button
                size="lg"
                className="h-12 rounded-full px-8 text-base font-medium"
                onClick={() => scrollToSection("tra-cuu-chung-chi")}
              >
                <FiSearch className="mr-2 h-4 w-4" />
                Tra c·ª©u ch·ª©ng ch·ªâ
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="h-12 rounded-full border-indigo-400/60 px-8 text-base text-indigo-200 hover:bg-indigo-500/10"
                onClick={() => scrollToSection("dang-ky-ngay")}
              >
                <FiUserPlus className="mr-2 h-4 w-4" />
                ƒêƒÉng k√Ω ngay
              </Button>
            </motion.div>
          </div>
        </section>

        <section
          id="cach-hoat-dong-loi-ich"
          className="bg-slate-900/60 scroll-mt-[80px] text-center"
        >
          <div className="mx-auto max-w-6xl px-6 py-16 sm:px-8 md:py-20">
            <Badge
              variant="secondary"
              className="mx-auto bg-indigo-500/10 px-5 py-2 text-sm font-semibold uppercase tracking-wide text-indigo-200 sm:text-base"
            >
              ‚öôÔ∏è C√°ch ho·∫°t ƒë·ªông & L·ª£i √≠ch
            </Badge>
            <h2 className="mt-4 text-2xl font-semibold text-slate-100 sm:text-3xl">
              Chu tr√¨nh x√°c th·ª±c tinh g·ªçn ‚Äì b·∫£o m·∫≠t ‚Äì ƒë√°ng tin c·∫≠y
            </h2>
            <p className="mt-4 max-w-3xl text-center text-slate-300 sm:mx-auto">
              Quy tr√¨nh c·ªßa CertifyChain ƒë∆∞·ª£c x√¢y d·ª±ng xoay quanh tr·∫£i nghi·ªám ng∆∞·ªùi d√πng v√† t√≠nh minh b·∫°ch tuy·ªát ƒë·ªëi.
              T·ª´ kh√¢u ph√°t h√†nh, l∆∞u tr·ªØ ƒë·∫øn x√°c th·ª±c, m·ªçi d·ªØ li·ªáu ƒë·ªÅu ƒë∆∞·ª£c x·ª≠ l√Ω t·ª± ƒë·ªông v√† an to√†n tr√™n blockchain.
            </p>
            <p className="mt-4 text-sm font-semibold uppercase tracking-wide text-indigo-200">
              üîπ Ba b∆∞·ªõc x√°c th·ª±c th√¥ng minh
            </p>
            <div className="mt-10 grid gap-8 md:grid-cols-3">
              {steps.map((step) => (
                <Card
                  key={step.title}
                  className="border border-indigo-500/10 bg-slate-900/50 text-left shadow-lg shadow-indigo-500/10"
                >
                  <CardHeader>
                    <CardTitle className="flex items-center gap-3 text-xl text-slate-100">
                      <span className="inline-flex h-10 w-10 items-center justify-center rounded-full bg-indigo-500/10 text-lg text-indigo-300">
                        {step.marker}
                      </span>
                      <span>{step.title}</span>
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-sm text-slate-300">{step.description}</p>
                  </CardContent>
                </Card>
              ))}
            </div>
            <div className="mt-16 space-y-4">
              <p className="text-sm font-semibold uppercase tracking-wide text-indigo-200">
                üåê L·ª£i √≠ch n·ªïi b·∫≠t
              </p>
              <div className="grid gap-6 md:grid-cols-2">
                {benefits.map((benefit) => {
                  const Icon = benefit.icon;
                  return (
                    <Card key={benefit.title} className="border border-indigo-500/10 bg-slate-900/60 text-left">
                      <CardHeader className="flex items-start gap-3">
                        <span className="rounded-full bg-indigo-500/10 p-3 text-indigo-300">
                          <Icon className="h-5 w-5" />
                        </span>
                        <div>
                          <CardTitle className="text-lg text-slate-100">{benefit.title}</CardTitle>
                          <CardDescription className="text-sm text-slate-300">{benefit.description}</CardDescription>
                        </div>
                      </CardHeader>
                    </Card>
                  );
                })}
              </div>
            </div>
          </div>
        </section>

        <section
          id="tra-cuu-chung-chi"
          className="mx-auto max-w-6xl scroll-mt-[80px] px-6 py-16 text-center sm:px-8 md:py-20"
        >
          <Badge
            variant="secondary"
            className="mx-auto bg-indigo-500/10 px-5 py-2 text-sm font-semibold uppercase tracking-wide text-indigo-200 sm:text-base"
          >
            Tra c·ª©u ch·ª©ng ch·ªâ
          </Badge>
          <h2 className="mt-4 text-2xl font-semibold text-slate-100 sm:text-3xl">
            Ki·ªÉm tra vƒÉn b·∫±ng an to√†n trong t√≠ch t·∫Øc
          </h2>
          <p className="mt-4 max-w-3xl text-center text-slate-300 sm:mx-auto">
            D√†nh cho nh√† tuy·ªÉn d·ª•ng, ph√≤ng nh√¢n s·ª± v√† c·ª±u sinh vi√™n. Ch·ªâ c·∫ßn m·ªôt c√∫ nh·∫•p chu·ªôt ƒë·ªÉ x√°c minh th√¥ng tin ƒë√∫ng
            chu·∫©n blockchain.
          </p>
          <div className="mt-10 grid gap-6 lg:grid-cols-3">
            {lookupFeatures.map((feature) => {
              const Icon = feature.icon;
              return (
                <Card key={feature.title} className="border border-indigo-500/10 bg-slate-900/50 text-left">
                  <CardHeader className="space-y-3">
                    <span className="inline-flex h-11 w-11 items-center justify-center rounded-full bg-indigo-500/10 text-indigo-300">
                      <Icon className="h-5 w-5" />
                    </span>
                    <CardTitle className="text-xl text-slate-100">{feature.title}</CardTitle>
                    <CardDescription className="text-sm text-slate-300">{feature.description}</CardDescription>
                  </CardHeader>
                </Card>
              );
            })}
          </div>
        </section>

        <section
          id="doi-tac"
          className="bg-slate-900/60 scroll-mt-[80px] text-center"
        >
          <div className="mx-auto max-w-6xl px-6 py-16 sm:px-8 md:py-20">
            <Badge
              variant="secondary"
              className="mx-auto bg-indigo-500/10 px-5 py-2 text-sm font-semibold uppercase tracking-wide text-indigo-200 sm:text-base"
            >
              ƒê·ªëi t√°c
            </Badge>
            <h2 className="mt-4 text-2xl font-semibold text-slate-100 sm:text-3xl">
              ƒê·ªìng h√†nh c√πng h·ªá sinh th√°i gi√°o d·ª•c v√† nh√¢n s·ª±
            </h2>
            <p className="mt-4 max-w-3xl text-center text-slate-300 sm:mx-auto">
              N·ªÅn t·∫£ng ƒë∆∞·ª£c tin d√πng b·ªüi c√°c tr∆∞·ªùng ƒë·∫°i h·ªçc, doanh nghi·ªáp tuy·ªÉn d·ª•ng v√† t·ªï ch·ª©c ch·ª©ng nh·∫≠n tr√™n kh·∫Øp ch√¢u
              √Å.
            </p>
            <div className="mt-8 flex flex-wrap justify-center gap-3">
              {partners.map((partner) => (
                <Badge
                  key={partner}
                  variant="outline"
                  className="border-indigo-500/30 bg-transparent px-4 py-2 text-sm font-medium text-slate-300"
                >
                  {partner}
                </Badge>
              ))}
            </div>
          </div>
        </section>

        <section
          id="dang-ky-ngay"
          className="bg-gradient-to-br from-indigo-600/10 via-slate-900 to-slate-950 scroll-mt-[80px] text-center"
        >
          <div className="mx-auto flex max-w-5xl flex-col items-center gap-6 px-6 py-20 sm:px-8">
            <Badge
              variant="secondary"
              className="bg-indigo-500/10 px-5 py-2 text-sm font-semibold uppercase tracking-wide text-indigo-200 sm:text-base"
            >
              ƒêƒÉng k√Ω ngay
            </Badge>
            <h2 className="text-3xl font-semibold text-slate-100 sm:text-4xl">
              S·∫µn s√†ng tri·ªÉn khai n·ªÅn t·∫£ng x√°c th·ª±c s·ªë?
            </h2>
            <p className="max-w-2xl text-lg text-slate-300">
              ƒê·ªôi ng≈© CertifyChain h·ªó tr·ª£ ph√¢n t√≠ch nhu c·∫ßu, k·∫øt n·ªëi API v√† ƒë√†o t·∫°o v·∫≠n h√†nh ch·ªâ trong v√†i ng√†y.
            </p>
            <div className="flex flex-wrap items-center justify-center gap-4">
              <Button size="lg" className="h-12 rounded-full px-8 text-base font-medium">
                ƒêƒÉng k√Ω ngay
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="h-12 rounded-full border-indigo-400/60 px-8 text-base text-indigo-200 hover:bg-indigo-500/10"
              >
                Y√™u c·∫ßu demo
              </Button>
            </div>
          </div>
        </section>

        <section
          id="lien-he"
          className="mx-auto max-w-6xl scroll-mt-[80px] px-6 py-16 text-center sm:px-8 md:py-20"
        >
          <Badge
            variant="secondary"
            className="mx-auto bg-indigo-500/10 px-5 py-2 text-sm font-semibold uppercase tracking-wide text-indigo-200 sm:text-base"
          >
            Li√™n h·ªá
          </Badge>
          <h2 className="mt-4 text-2xl font-semibold text-slate-100 sm:text-3xl">
            K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt
          </h2>
          <div className="mt-10 grid gap-6 md:grid-cols-2">
            <Card className="border border-indigo-500/10 bg-slate-900/60 text-left">
              <CardHeader>
                <CardTitle className="text-2xl text-slate-100">H·ªó tr·ª£ t·ª©c th√¨</CardTitle>
                <CardDescription className="text-slate-300">
                  Nh·∫≠n t∆∞ v·∫•n tri·ªÉn khai, cung c·∫•p l·ªô tr√¨nh onboarding ri√™ng v√† t√†i li·ªáu k·ªπ thu·∫≠t cho ƒë·ªôi ng≈© c·ªßa b·∫°n.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="space-y-3 text-sm text-slate-300">
                  {contactDetails.map((channel) => {
                    const Icon = channel.icon;
                    return (
                      <li key={channel.label} className="flex items-start gap-3">
                        <span className="mt-0.5 inline-flex h-8 w-8 items-center justify-center rounded-full bg-indigo-500/10 text-indigo-300">
                          <Icon className="h-4 w-4" />
                        </span>
                        <div>
                          <p className="font-semibold text-slate-200">{channel.label}</p>
                          <p>{channel.value}</p>
                        </div>
                      </li>
                    );
                  })}
                </ul>
              </CardContent>
            </Card>
            <Card className="border border-indigo-500/10 bg-slate-900/60 text-left">
              <CardHeader className="space-y-3">
                <CardTitle className="text-2xl text-slate-100">Li√™n h·ªá c√πng chuy√™n gia</CardTitle>
                <CardDescription className="text-slate-300">
                  Vui l√≤ng ƒëi·ªÅn th√¥ng tin ƒë·ªÉ ch√∫ng t√¥i li√™n h·ªá t∆∞ v·∫•n chi ti·∫øt theo nhu c·∫ßu c·ªßa b·∫°n.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <form className="space-y-4">
                  <div className="space-y-1.5">
                    <label htmlFor="contact-name" className="text-sm font-medium text-slate-200">
                      H·ªç v√† t√™n
                    </label>
                    <input
                      id="contact-name"
                      type="text"
                      placeholder="Nguy·ªÖn VƒÉn A"
                      className="w-full rounded-lg border border-indigo-500/20 bg-slate-950/60 px-4 py-2 text-sm text-slate-100 placeholder:text-slate-500 focus:border-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-500/40"
                      required
                    />
                  </div>
                  <div className="space-y-1.5">
                    <label htmlFor="contact-email" className="text-sm font-medium text-slate-200">
                      Email
                    </label>
                    <input
                      id="contact-email"
                      type="email"
                      placeholder="email@domain.com"
                      className="w-full rounded-lg border border-indigo-500/20 bg-slate-950/60 px-4 py-2 text-sm text-slate-100 placeholder:text-slate-500 focus:border-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-500/40"
                      required
                    />
                  </div>
                  <div className="space-y-1.5">
                    <label htmlFor="contact-message" className="text-sm font-medium text-slate-200">
                      N·ªôi dung
                    </label>
                    <textarea
                      id="contact-message"
                      rows={4}
                      placeholder="M√¥ t·∫£ nhu c·∫ßu t√≠ch h·ª£p, quy m√¥ t·ªï ch·ª©c ho·∫∑c c√¢u h·ªèi c·ªßa b·∫°n..."
                      className="w-full rounded-lg border border-indigo-500/20 bg-slate-950/60 px-4 py-2 text-sm text-slate-100 placeholder:text-slate-500 focus:border-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-500/40"
                      required
                    />
                  </div>
                  <Button type="submit" size="lg" className="w-full rounded-full text-base">
                    G·ª≠i y√™u c·∫ßu
                  </Button>
                  <p className="text-sm text-slate-400">
                    Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù l√†m vi·ªác.
                  </p>
                </form>
              </CardContent>
            </Card>
          </div>
        </section>
      </main>

      <footer className="border-t border-indigo-500/10 bg-slate-950">
        <div className="mx-auto max-w-6xl px-6 py-12 sm:px-8">
          <div className="grid gap-10 md:grid-cols-3">
            <div>
              <h3 className="text-xl font-semibold text-slate-100">CertifyChain</h3>
              <p className="mt-4 text-sm text-slate-400">
                Gi·∫£i ph√°p x√°c th·ª±c vƒÉn b·∫±ng d·ª±a tr√™n blockchain, mang l·∫°i s·ª± minh b·∫°ch v√† uy t√≠n cho h·ªá sinh th√°i gi√°o
                d·ª•c.
              </p>
            </div>
            <div>
              <h4 className="font-medium text-slate-200">Li√™n h·ªá</h4>
              <ul className="mt-4 space-y-2 text-sm text-slate-400">
                <li>Email: support@certifychain.io</li>
                <li>ƒêi·ªán tho·∫°i: +84 24 7300 1234</li>
                <li>VƒÉn ph√≤ng: 845 Innovation Drive, T·∫ßng 3</li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium text-slate-200">ƒê·ªëi t√°c ti√™u bi·ªÉu</h4>
              <div className="mt-4 flex flex-wrap gap-2">
                {partners.map((partner) => (
                  <Badge
                    key={partner}
                    variant="outline"
                    className="border-indigo-500/30 bg-transparent text-slate-300"
                  >
                    {partner}
                  </Badge>
                ))}
              </div>
            </div>
          </div>
          <Separator className="my-8 border-indigo-500/10" />
          <div className="flex flex-col gap-4 text-sm text-slate-500 sm:flex-row sm:items-center sm:justify-between">
            <p>&copy; {new Date().getFullYear()} CertifyChain. Gi·ªØ m·ªçi quy·ªÅn.</p>
            <div className="flex gap-4">
              <a href="#" className="hover:text-slate-300">
                Ch√≠nh s√°ch b·∫£o m·∫≠t
              </a>
              <a href="#" className="hover:text-slate-300">
                ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng
              </a>
              <a href="#" className="hover:text-slate-300">
                Tr·ª£ gi√∫p truy c·∫≠p
              </a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};
